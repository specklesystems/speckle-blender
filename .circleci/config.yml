version: 2.1

orbs:
  win: circleci/windows@2.4.0

jobs:
  package-connector:
    docker:
      - image: cimg/python:3.11.0
    steps:
      - checkout
      - run:
          name: Setup SEMVER value
          command: |
            SEMVER=$(if [ "${CIRCLE_TAG}" ]; then echo $CIRCLE_TAG; else echo "0.0.0"; fi;)
            echo $SEMVER > ./SEMVER
            python3 patch_version.py $SEMVER
      - run:
          name: install dependencies
          command: poetry install --only main
      - run:
          name: export package dependencies
          command: ./export_dependencies.sh
      - persist_to_workspace:
          root: ./
          paths:
            - bpy_speckle
            - patch_installer.py
            - SEMVER

  build-connector-zip:
    docker:
      - image: cimg/python:3.11.0
    steps:
      - attach_workspace:
          at: ./
      - run: &restore_semver
          name: Restore Semver
          command: SEMVER=$(cat ./SEMVER)
      - run:
          name: Package to Zip
          command: zip -r bpy_speckle.zip bpy_speckle
      - persist_to_workspace:
          root: ./
          paths:
            - bpy_speckle
  
  get-ci-tools: # Clones our ci tools and persists them to the workspace
    docker:
      - image: cimg/base:2021.01
    steps:
      - run: # Could not get ssh to work, so using a personal token
          name: Clone
          command: git clone https://$GITHUB_TOKEN@github.com/specklesystems/speckle-sharp-ci-tools.git speckle-sharp-ci-tools
      - persist_to_workspace:
          root: ./
          paths:
            - speckle-sharp-ci-tools

  build-installer-win:
    executor:
      name: win/default
      shell: cmd.exe
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Patch installer
          shell: powershell.exe
          command: python patch_installer.py (Get-Content -Raw SEMVER)
      - run:
          name: Installer
          shell: cmd.exe #does not work in powershell
          command: speckle-sharp-ci-tools\InnoSetup\ISCC.exe speckle-sharp-ci-tools\blender.iss /Sbyparam=$p
      - persist_to_workspace:
          root: ./
          paths:
            - speckle-sharp-ci-tools/Installers

  build-dotnet-installer:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    parameters:
      runtime:
        type: string
      slug:
        type: string
      installer_path:
        type: string
        default: speckle-sharp-ci-tools/Mac/SpeckleBlenderInstall
    steps:
      - attach_workspace:
          at: ./
      - run: *restore_semver
      - run:
          name: Copy connector files to installer
          command: |
            mkdir -p << parameters.installer_path >>/.installationFiles
            cp bpy_speckle.zip << parameters.installer_path >>/.installationFiles
      - run:
          name: Build installer
          command: dotnet publish <<parameters.installer_path>>/SpeckleBlenderInstall.sln -r << parameters.runtime >> -c Release
      - run:
          name: Zip installer
          command: |
            cd <<parameters.installer_path>>/bin/Release/net6.0/<< parameters.runtime >>/
            zip -r << parameters.slug >>.zip ./

      - persist_to_workspace:
          root: ./
          paths:
            - << parameters.installer_path >>
      
      - store_artifacts:
          path: << parameters.installer_path >>

  deploy-connector-new:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    parameters:
      slug:
        type: string
      file_slug:
        type: string
      os:
        type: string
      extension:
        type: string
      arch:
        type: string
        default: Any
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: *restore_semver
      - run:
          name: Install Manager Feed CLI
          command: dotnet tool install --global Speckle.Manager.Feed
      - run:
          name: Upload new version
          command: |
            /root/.dotnet/tools/Speckle.Manager.Feed deploy \
                -s << parameters.slug >> \
                -v ${SEMVER} \
                -u https://releases.speckle.dev/installers/<< parameters.slug >>/<< parameters.file_slug >>-${SEMVER}.<< parameters.extension >> \
                -o << parameters.os >> \
                -a << parameters.arch >> \
                -f speckle-sharp-ci-tools/Installers/<< parameters.file_slug >>/<< parameters.file_slug >>-${SEMVER}.<< parameters.extension >>

workflows:
  build: # build the installers, but don't persist to workspace for deployment
    jobs:
      - package-connector:
          filters:
            branches:
              only:
                - gergo/newInstaller
      
      - build-connector-zip:
          requires:
            - package-connector
          filters: &build_filters
            tags:
              only: /([0-9]+)\.([0-9]+)\.([0-9]+)(?:-\w+)?$/


      - get-ci-tools:
          filters: *build_filters

      - build-installer-win:
          name: Windows Installer Build
          requires:
            - package-connector
            - get-ci-tools
          filters: *build_filters

      - deploy-connector-new:
          name: deploy-windows
          slug: blender
          file_slug: blender-mac-intel
          os: WIN
          arch: Intel
          extension: exe
          requires:
            - Windows Installer Build
          filters: &deploy_filters
            branches:
              ignore: /.*/
            tags:
              only: /([0-9]+)\.([0-9]+)\.([0-9]+)(?:-\w+)?$/

      - build-dotnet-installer:
          name: Mac ARM Build
          slug: blender-mac-arm
          runtime: osx-arm64
          requires:
            - get-ci-tools
            - build-connector-zip

      - deploy-connector-new:
          name: deploy-mac-arm
          slug: blender
          file_slug: blender-mac-arm
          os: OSX
          arch: Arm
          extension: zip
          requires:
            - Mac ARM Build
          filters: *deploy_filters

      - build-dotnet-installer:
          name: Mac Intel Build
          slug: blender-mac-intel
          runtime: osx-x64
          requires:
            - get-ci-tools
            - build-connector-zip

      - deploy-connector-new:
          name: deploy-mac-intel
          slug: blender
          file_slug: blender-mac-arm
          os: OSX
          arch: Intel
          extension: zip
          requires:
            - Mac Intel Build
          filters: *deploy_filters

# VS Code Extension Version: 1.4.0