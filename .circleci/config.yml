version: 2.1

orbs:
  python: circleci/python@1.3.2
  # Using windows for builds
  win: circleci/windows@2.4.0
  # Upload artifacts to s3
  aws-s3: circleci/aws-s3@2.0.0

jobs:
  build-connector: # Reusable job for basic connectors
    executor:
      name: win/default   # comes with python 3.7.3
      shell: cmd.exe 
    parameters:
      slug:
        type: string
        default: ''
    steps:
      - checkout
      - run: 
          name: install specklepy to `modules` dir
          command: |
            python --version
            python -m pip install --upgrade pip
            python -m pip install --target=.\modules specklepy
      - attach_workspace:
          at: ./
      - run:
          name: Patch
          shell: powershell.exe
          command: | # If no tag, use 0.0.0.1 and don't make any YML (for testing only!)
            $tag = if([string]::IsNullOrEmpty($env:CIRCLE_TAG)) { "0.0.1" } else { $env:CIRCLE_TAG }
            $semver = $tag.replace("-beta","").Split("/")[1]  
            $version = "$($semver).$($env:CIRCLE_BUILD_NUM)"
            $version
            $channel = "latest"
            if($tag -like "*-beta") { $channel = "beta" }
            # only create the yml if we have a tag
            if(-Not [string]::IsNullOrEmpty($env:CIRCLE_TAG)) { New-Item -Force "speckle-sharp-ci-tools/Installers/<< parameters.slug >>/$channel.yml" -ItemType File -Value "version: $version" }
      - run: # Creates the inno installer
          name: InnoSetup
          command: |
            echo hello there!
            if exist "speckle-sharp-ci-tools\Installers\%slug%\beta.yml" (set channel=beta) else (set channel=latest)
            set yaml_path="speckle-sharp-ci-tools\Installers\%slug%\%channel%.yml"
            echo %yaml_path%
            for /f "tokens=1,2" %G in (%yaml_path%) do set version=%H
            echo %version%
            speckle-sharp-ci-tools\InnoSetup\ISCC.exe speckle-sharp-ci-tools\%slug%.iss /dAppVersion=%version%
          environment:
            slug: << parameters.slug >>
      - persist_to_workspace:
          root: ./
          paths:
            - speckle-sharp-ci-tools/Installers

  get-ci-tools: # Clones our ci tools and persists them to the workspace
    docker:
      - image: cimg/base:2021.01
    steps:
      - run: # Could not get ssh to work, so using a personal token 
          name: Clone
          command: git clone https://$GITHUB_TOKEN@github.com/specklesystems/speckle-sharp-ci-tools.git speckle-sharp-ci-tools
      - persist_to_workspace:
          root: ./
          paths:
            - speckle-sharp-ci-tools

  deploy: # Uploads all installers found to S3
    docker:
      - image: cimg/base:2021.01
    steps:    
      - attach_workspace:
          at: ./
      - run: 
          name: List contents
          command: ls -R speckle-sharp-ci-tools/Installers
      - aws-s3/copy:
          arguments: '--recursive --endpoint=https://$SPACES_REGION.digitaloceanspaces.com --acl public-read'
          aws-access-key-id: SPACES_KEY
          aws-region: SPACES_REGION
          aws-secret-access-key: SPACES_SECRET
          from: '"speckle-sharp-ci-tools/Installers/"'
          to: s3://speckle-releases/installers/

workflows:
  deploy:
    jobs:
      - get-ci-tools:
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/ # For testing only! /ci\/.*/
      
      - build-connector:
          slug: blender  
          requires:
              - get-ci-tools
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/ # For testing only! /ci\/.*/
      
      - deploy:
          requires:
            - get-ci-tools
            - build-connector
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/ # For testing only! /ci\/.*/