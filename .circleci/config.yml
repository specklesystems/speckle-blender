version: 2.1

orbs:
  python: circleci/python@1.3.2
  # Using windows for builds
  win: circleci/windows@2.4.0
  # Upload artifacts to s3
  aws-s3: circleci/aws-s3@2.0.0

jobs:
  build-connector: # Reusable job for basic connectors
    executor:
      name: win/default # comes with python 3.7.3
      shell: cmd.exe
    parameters:
      slug:
        type: string
        default: ""
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: 
          name: Install specklepy with python 3.7
          shell: powershell.exe
          command: |
            $pyarr=(python --version).split(' ')[1].split('.')
            $pyver=($pyarr[0..1] -join '.')
            echo "using python version:" $pyver
            $specklepy=(python patch_version.py)
            python -m pip install --target=./modules-$pyver specklepy==$specklepy
      - run: 
          name: Install python 3.9 and specklepy 
          shell: powershell.exe
          command: |
            choco upgrade python --version=3.9.7
            refreshenv
            $pyarr=(py --version).split(' ')[1].split('.')
            $pyver=($pyarr[0..1] -join '.')
            echo "using python version:" $pyver
            $specklepy=(python patch_version.py)
            py -m pip install --target=./modules-$pyver specklepy==$specklepy
      - run:
          name: Patch
          shell: powershell.exe
          command:
            | # If no tag, use 0.0.0.1 and don't make any YML (for testing only!)
            $tag = if([string]::IsNullOrEmpty($env:CIRCLE_TAG)) { "0.0.1" } else { $env:CIRCLE_TAG }
            $semver = $tag.replace("-beta","")
            $version = "$($semver).$($env:CIRCLE_BUILD_NUM)"
            $channel = "latest"
            if($tag -like "*-beta") { $channel = "beta" }
            # only create the yml if we have a tag
            New-Item -Force "speckle-sharp-ci-tools/Installers/blender/$channel.yml" -ItemType File -Value "version: $version"
            echo $version
            ls
            python patch_version.py $version
            speckle-sharp-ci-tools\InnoSetup\ISCC.exe speckle-sharp-ci-tools\blender.iss
      - persist_to_workspace:
          root: ./
          paths:
            - speckle-sharp-ci-tools/Installers

  install-specklepy: # due to ujson dep, we need to match the py version to the install
    docker:
      - image: "cimg/python:<<parameters.tag>>"
    parameters:
      tag:
        default: "3.9"
        type: string
    steps:
      - checkout
      - run:
          name: upgrade pip and install specklepy
          command: |
            specklepyver=$(python patch_version.py)
            echo installing specklepy $specklepyver
            python -m pip install --target=./modules-<<parameters.tag>> specklepy==$specklepyver
      - persist_to_workspace:
          root: ./
          paths:
            - modules-*
          
  get-ci-tools: # Clones our ci tools and persists them to the workspace
    docker:
      - image: cimg/base:2021.01
    steps:
      - run: # Could not get ssh to work, so using a personal token
          name: Clone
          command: git clone https://$GITHUB_TOKEN@github.com/specklesystems/speckle-sharp-ci-tools.git speckle-sharp-ci-tools
      - persist_to_workspace:
          root: ./
          paths:
            - speckle-sharp-ci-tools

  deploy: # Uploads all installers found to S3
    docker:
      - image: cimg/base:2021.01
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: List contents
          command: ls -R speckle-sharp-ci-tools/Installers
      - aws-s3/copy:
          arguments: "--recursive --endpoint=https://$SPACES_REGION.digitaloceanspaces.com --acl public-read"
          aws-access-key-id: SPACES_KEY
          aws-region: SPACES_REGION
          aws-secret-access-key: SPACES_SECRET
          from: '"speckle-sharp-ci-tools/Installers/"'
          to: s3://speckle-releases/installers/

workflows:
  main:
    jobs:
      - get-ci-tools:
          filters:
            tags:
              only: /.*/
            branches:
              only:
                - main
                - /ci\/.*/
      - build-connector:
          slug: blender
          requires:
            - get-ci-tools
          filters:
            tags:
              only: /.*/
            branches:
              only:
                - main
                - /ci\/.*/
      - deploy:
          requires:
            - get-ci-tools
            - build-connector
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/ # For testing only! /ci\/.*/
